const t=t=>t instanceof a,s=(s,e)=>t(s)?s:new a(s,e),e=(t,s,e)=>{const i=new a(void 0,s);return n((()=>{i[c]=t(),h(i)}),e),i},i=[],h=t=>[...t[r]].forEach((t=>t())),n=(t,s)=>{const e=[],h=()=>{e.splice(0,e.length).forEach((t=>{t[r].splice(t[r].indexOf(n),1)}))},n=()=>{s?.()||(h(),i.unshift(e),t(),i.shift().forEach((t=>t[r].push(n))))};return n(),{cancel:h}},c=Symbol(),r=Symbol(),o=Symbol();function l(t){this[o].willSet?.(t,this),this[c]=t,this[o].didSet?.(t,this),h(this)}function u(t){const s=t(this[c]);return this.set(this[c]),s}class a{constructor(t,s={}){this[c]=t,this[r]=[],this[o]=s,(s.mutable??1)&&(this.set=l,this.modify=u),s.setup?.(this)}toJSON(){return{value:this[c]}}get(t=!0){return t&&i[0]&&!i[0].includes(this)&&i[0].push(this),this[c]}to(t,s){const i=this[o].convertedDelegate?.(this),h=e((()=>t(this.get())),i,s);return this[o].didConvert?.(this,h),h}watch(t){return n((()=>t(this.get())))}}var f=Object.assign(((t,s)=>new a(t,s)),{ensure:s,calc:e,isData:t,sync:n,getAll:t=>t.map((t=>t.get())),ensureAll:t=>t.map((t=>s(t))),get:s=>t(s)?s.get():s});export default f;
