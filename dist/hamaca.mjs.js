const t=t=>{const s=new r;return n((()=>{s._=t(),c(s)})),s},s=t=>t instanceof r?t:new r(t),e=[],n=(t,s)=>{const n=[],c=()=>{s&&!s.active||(n.splice(0,n.length).forEach((t=>{t._obs.splice(t._obs.indexOf(c),1)})),e.unshift(n),t(),e.shift().forEach((t=>t._obs.push(c))))};c()},c=t=>{[...t._obs].forEach((t=>t()))};class r{constructor(t){this._=t,this._obs=[]}get(t=!0){return t&&e[0]&&!e[0].includes(this)&&e[0].push(this),this._}to(s){return t((()=>s(this.get())))}watch(t){return n((()=>{t(this.get())})),this}}class i extends r{constructor(t){super(t)}set(t){this._=t,c(this)}modify(t){t(this._),c(this)}}const h=(t,s=!1)=>!0===s?new r(t):new i(t);Object.assign(h,{ensure:s,calc:t,sync:n,getAll:t=>t.map((t=>t.get())),ensureAll:t=>t.map((t=>s(t))),isData:t=>t instanceof r});var o=h;export default o;
